__author__ = 'sam.royston'
import csv, os

def clean_logfile(filename):
    """
    this method assumes the dir structure corresponds to what is generated by
    the logging in doall.lua @ commit 49ac4bf78424bfe407a47292dc745260839f2e2e

    the output is a dict of arrays, constructed from either test.log or train.log:

    {"avg":[0.20, ..., 90], "1":[0.20, ..., 0.90], ..., "9":[0.20, ..., 0.90],"0":[0.20, ..., 0.90]},
    """
    with open(filename, 'rb') as f:
        parsed = [row for row in csv.DictReader(f, delimiter='\t')]
        processed = {}
        for key in parsed[0].keys()[1:]:
            processed[key] = [float(item[key]) for item in [p for p in parsed]]
            if '%' in key:
                processed['avg'] = [float(item[key])/100 for item in parsed]
                processed.pop(key)
        return processed

def clean_params(filename):
    """

    """
    with open(filename, 'rb') as f:
        parsed = next(csv.DictReader(f, delimiter='\t'))
    return parsed

def get_sessions(data_dir):
    """
    this method assumes the dir structure corresponds to what is generated by
    the logging in doall.lua @ commit 49ac4bf78424bfe407a47292dc745260839f2e2e

    the output is an array of dicts, one for each session:
    [
        {
            "date":"feb_2_12:10:55",
            "params":{ model: linear, stepsize: 1.2, ...},
            "test":{avg":[20, ..., 90], "1":[20, ..., 90], ..., "9":[20, ..., 90],"0":[20, ..., 90]},
            "train":{avg":[20, ..., 90], "1":[20, ..., 90], ..., "9":[20, ..., 90],"0":[20, ..., 90]}
        },
        ...
        {
            "date":"feb_3_12:10:51",
            "params":{ model: linear, stepsize: 1.2, ...},
            "test":{"avg":[0.20, ..., 90], "1":[0.20, ..., 0.90], ..., "9":[0.20, ..., 0.90],"0":[0.20, ..., 0.90]},
            "train":{"avg":[0.20, ..., 90], "1":[0.20, ..., 0.90], ..., "9":[0.20, ..., 0.90],"0":[0.20, ..., 0.90]},
        }
    ]
    """
    sessions = []
    for session in os.listdir(data_dir):
        contents = os.listdir(data_dir + '/' + session)
        if "test.log" in contents and "train.log" in contents and "params.log" in contents:
            session_output = {
                        "date": session[:-13].replace('__','_'),
                        "params": clean_params(data_dir + '/' + session + '/params.log')
                      }
            for item in os.listdir(data_dir + '/' + session):
                if "test" in item:
                    session_output["test"] = clean_logfile(data_dir + '/' + session + '/' +item)
                elif "train" in item:
                    session_output["train"] = clean_logfile(data_dir + '/' + session + '/' +item)
            sessions.append(session_output)
    return sessions
